{
    "model": "opusplan",
    "permissions": {
        "allow": [
            "Bash(cp:*)",
            "Bash(diff:*)",
            "Bash(jq:*)",
            "Bash(uv run:*)",
            "Bash(ls:*)",
            "Bash(env)",
            "Bash(rm:*)",
            "Bash(npm run:*)",
            "Bash(npm run dev:*)",
            "Bash(find:*)",
            "Bash(pkill:*)",
            "mcp__ide__getDiagnostics",
            "Bash(grep:*)",
            "Bash(git add:*)",
            "Bash(git merge-base:*)",
            "Bash(git commit:*)",
            "Bash(git diff:*)",
            "Bash(python test:*)",
            "Bash(true)",
            "Bash(npm test:*)",
            "Bash(curl:*)",
            "mcp__ast-grep__dump_syntax_tree",
            "mcp__ast-grep__find_code",
            "mcp__ast-grep__test_match_code_rule",
            "mcp__ast-grep__find_code_by_rule",
            "mcp__context7__resolve-library-id",
            "mcp__context7__get-library-docs",
            "Bash(rg:*)",
            "Bash(python -c:*)",
            "Bash(time uv run:*)",
            "Bash(uv:*)",
            "Bash(mkdir:*)",
            "Bash(git:*)",
            "Bash(npm:*)",
            "Bash(PYTHONPATH=. python:*)",
            "Bash(PYTHONPATH=. uv run:*)",
            "Bash(python:*)",
            "Bash(node:*)",
            "Bash(pre-commit:*)",
            "Bash(chmod:*)",
            "Bash(docker:*)",
            "Bash(gh issue:*)",
            "Bash(gh pr:*)",
            "Bash(echo:*)",
            "Bash(fi)",
            "Bash(gh issue comment:*)",
            "WebSearch",
            "Bash(gh api:*)",
            "Bash(gh auth:*)",
            "WebFetch(domain:docs.github.com)",
            "WebFetch(domain:blog.cloudflare.com)",
            "Bash(mv:*)",
            "WebFetch(domain:developers.cloudflare.com)",
            "WebFetch(domain:raw.githubusercontent.com)",
            "Bash(gh run view:*)",
            "WebFetch(domain:github.com)",
            "Bash(yamllint:*)",
            "Bash(source:*)",
            "Bash(timeout:*)",
            "Bash(gcloud run revisions:*)",
            "Bash(tree:*)",
            "Bash(cat:*)",
            "Bash(shellcheck:*)",
            "Bash(gh run list:*)",
            "WebFetch(domain:www.schemastore.org)",
            "Bash(sed:*)",
            "Bash(tsc:*)",
            "mcp__playwright__browser_close",
            "mcp__playwright__browser_resize",
            "mcp__playwright__browser_install",
            "mcp__playwright__browser_navigate",
            "mcp__playwright__browser_navigate_back",
            "mcp__playwright__browser_tabs",
            "mcp__playwright__browser_click",
            "mcp__playwright__browser_type",
            "mcp__playwright__browser_hover",
            "mcp__playwright__browser_press_key",
            "mcp__playwright__browser_drag",
            "mcp__playwright__browser_fill_form",
            "mcp__playwright__browser_select_option",
            "mcp__playwright__browser_file_upload",
            "mcp__playwright__browser_snapshot",
            "mcp__playwright__browser_take_screenshot",
            "mcp__playwright__browser_console_messages",
            "mcp__playwright__browser_network_requests",
            "mcp__playwright__browser_wait_for",
            "mcp__playwright__browser_handle_dialog",
            "mcp__playwright__browser_evaluate",
            "Bash(head:*)",
            "Bash(npm run lint:*)",
            "Bash(npm run type-check:*)",
            "Bash(npm run test:*)",
            "Bash(npm run build:*)",
            "Bash(do sed -i:*)",
            "Bash(psql:*)",
            "Bash(find:*)",
            "Bash(grep -E:*)",
            "Bash(grep:*)",
            "Bash(head:*)",
            "Bash(ls -la:*)",
            "mcp__shadcn__get_project_registries",
            "mcp__shadcn__list_items_in_registries",
            "mcp__shadcn__search_items_in_registries",
            "mcp__shadcn__view_items_in_registries",
            "mcp__shadcn__get_item_examples_from_registries",
            "mcp__shadcn__get_add_command_for_items",
            "mcp__shadcn__get_audit_checklist",
            "Bash(npx shadcn@latest:*)",
            "Bash(npx vitest:*)",
            "Bash(OPENAI_API_KEY:*)",
            "Bash(time npm test:*)",
            "WebFetch(domain:www.starlette.io)",
            "WebFetch(domain:medium.com)",
            "Bash(do echo:*)",
            "mcp__github__add_comment_to_pending_review",
            "mcp__github__add_issue_comment",
            "mcp__github__add_sub_issue",
            "mcp__github__assign_copilot_to_issue",
            "mcp__github__cancel_workflow_run",
            "mcp__github__create_and_submit_pull_request_review",
            "mcp__github__create_branch",
            "mcp__github__create_gist",
            "mcp__github__create_issue",
            "mcp__github__create_or_update_file",
            "mcp__github__create_pending_pull_request_review",
            "mcp__github__create_pull_request",
            "mcp__github__create_pull_request_with_copilot",
            "mcp__github__create_repository",
            "mcp__github__delete_file",
            "mcp__github__delete_pending_pull_request_review",
            "mcp__github__delete_workflow_run_logs",
            "mcp__github__dismiss_notification",
            "mcp__github__download_workflow_run_artifact",
            "mcp__github__fork_repository",
            "mcp__github__get_code_scanning_alert",
            "mcp__github__get_commit",
            "mcp__github__get_dependabot_alert",
            "mcp__github__get_discussion",
            "mcp__github__get_discussion_comments",
            "mcp__github__get_file_contents",
            "mcp__github__get_global_security_advisory",
            "mcp__github__get_issue",
            "mcp__github__get_issue_comments",
            "mcp__github__get_job_logs",
            "mcp__github__get_latest_release",
            "mcp__github__get_me",
            "mcp__github__get_notification_details",
            "mcp__github__get_pull_request",
            "mcp__github__get_pull_request_comments",
            "mcp__github__get_pull_request_diff",
            "mcp__github__get_pull_request_files",
            "mcp__github__get_pull_request_reviews",
            "mcp__github__get_pull_request_status",
            "mcp__github__get_release_by_tag",
            "mcp__github__get_secret_scanning_alert",
            "mcp__github__get_tag",
            "mcp__github__get_team_members",
            "mcp__github__get_teams",
            "mcp__github__get_workflow_run",
            "mcp__github__get_workflow_run_logs",
            "mcp__github__get_workflow_run_usage",
            "mcp__github__list_branches",
            "mcp__github__list_code_scanning_alerts",
            "mcp__github__list_commits",
            "mcp__github__list_dependabot_alerts",
            "mcp__github__list_discussion_categories",
            "mcp__github__list_discussions",
            "mcp__github__list_gists",
            "mcp__github__list_global_security_advisories",
            "mcp__github__list_issue_types",
            "mcp__github__list_issues",
            "mcp__github__list_notifications",
            "mcp__github__list_org_repository_security_advisories",
            "mcp__github__list_pull_requests",
            "mcp__github__list_releases",
            "mcp__github__list_repository_security_advisories",
            "mcp__github__list_secret_scanning_alerts",
            "mcp__github__list_sub_issues",
            "mcp__github__list_tags",
            "mcp__github__list_workflow_jobs",
            "mcp__github__list_workflow_run_artifacts",
            "mcp__github__list_workflow_runs",
            "mcp__github__list_workflows",
            "mcp__github__manage_notification_subscription",
            "mcp__github__manage_repository_notification_subscription",
            "mcp__github__mark_all_notifications_read",
            "mcp__github__merge_pull_request",
            "mcp__github__push_files",
            "mcp__github__remove_sub_issue",
            "mcp__github__reprioritize_sub_issue",
            "mcp__github__request_copilot_review",
            "mcp__github__rerun_failed_jobs",
            "mcp__github__rerun_workflow_run",
            "mcp__github__run_workflow",
            "mcp__github__search_code",
            "mcp__github__search_issues",
            "mcp__github__search_orgs",
            "mcp__github__search_pull_requests",
            "mcp__github__search_repositories",
            "mcp__github__search_users",
            "mcp__github__submit_pending_pull_request_review",
            "mcp__github__update_gist",
            "mcp__github__update_issue",
            "mcp__github__update_pull_request",
            "mcp__github__update_pull_request_branch",
            "mcp__sequential-thinking__sequentialthinking",
            "Bash(git push:*)"
        ],
        "deny": []
    },
    "outputStyle": "Explanatory"
}