name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5
        with:
          node-version: 24
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test

      - name: Generate changelog
        id: changelog
        run: |
          # Get the tag name
          TAG=${GITHUB_REF#refs/tags/}
          echo "tag=$TAG" >> $GITHUB_OUTPUT

          # Get the previous tag
          PREV_TAG=$(git describe --tags --abbrev=0 $TAG^ 2>/dev/null || echo "")

          # Generate changelog
          if [ -n "$PREV_TAG" ]; then
            echo "## Changes since $PREV_TAG" > CHANGELOG.md
            git log --pretty=format:"- %s (%h)" $PREV_TAG..$TAG >> CHANGELOG.md
          else
            echo "## Initial Release" > CHANGELOG.md
            echo "This is the first release of Super Simple TfL Status." >> CHANGELOG.md
          fi

          # Set multiline output
          {
            echo 'changelog<<EOF'
            cat CHANGELOG.md
            echo EOF
          } >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: actions/create-release@0cb9c9b65d5d1901c1f53e5e66eaf4afd303e70e # v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.changelog.outputs.tag }}
          release_name: Release ${{ steps.changelog.outputs.tag }}
          body: ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: ${{ contains(steps.changelog.outputs.tag, '-') }}

      - name: Create deployment artifact
        run: |
          # Create a deployment package
          mkdir -p dist
          cp -r site/* dist/
          cp package.json dist/
          cp README.md dist/
          tar -czf super-simple-tfl-status-${{ steps.changelog.outputs.tag }}.tar.gz -C dist .

      - name: Upload Release Asset
        uses: actions/upload-release-asset@e8f9f06c4b078e705bd2ea027f0926603fc9b4d5 # v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./super-simple-tfl-status-${{ steps.changelog.outputs.tag }}.tar.gz
          asset_name: super-simple-tfl-status-${{ steps.changelog.outputs.tag }}.tar.gz
          asset_content_type: application/gzip